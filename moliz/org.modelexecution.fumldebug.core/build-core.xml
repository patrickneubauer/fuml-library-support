<?xml version="1.0" encoding="iso-8859-1"?>
<!--
Copyright (c) 2012 Vienna University of Technology.
All rights reserved. This program and the accompanying materials are made 
available under the terms of the Eclipse Public License v1.0 which accompanies 
this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html
  
Contributors:
Philip Langer - initial implementation
-->
<!--
Build file for creating a woven moliz-core jar file.

Input:  fuml.jar from the fUML reference implementation
        sources of org.modelexecution.fumldebug.core
        org.modelexecution.fumldebug.core.aspect
        
Output: moliz-core-vX.X.X.jar woven with aspects
          from org.modelexecution.fumldebug.core.aspect
-->
<!--
TODO add task for stripping original fuml.jar
Currently we simply use a manually created fuml.jar which is placed next
to this file.
In future we should build fuml.jar from the fUML reference implementation
either by running the entire fUML build:
  - extract fuml.jar from entire fUML build
  - remove all org.modeldriven.** except for org.modeldriven.fuml.FumlObject
or by building a corresponding jar file directly.
-->
<project name="org.modelexecution.fumldebug.core" default="distribute" basedir=".">

	<!-- Input locations -->
	<property name="fumldebug.core.src.dir" value="src"/>
	<property name="fumldebug.core.aspect.src.dir" value="../org.modelexecution.fumldebug.core.aspect/src"/>
	<property name="fuml.jar.path" value="fuml.jar"/>

	<!-- Target location of the output jar -->
	<property name="target.dir" value="target"/>
	<property name="dist.dir" value="../org.modelexecution.fumldebug/lib"/>

	<!-- Output naming -->
	<property name="release.name" value="moliz-core"/>
	<!-- note: you also have to change MANIFEST.MF of the plug-in containing ${dist.dir}
	in order to make sure that this plug-in uses the created distribution jar after changing
	the release suffix, because the release.suffix is part of the jar's file name and the
	MANIFEST.MF refers to the jar through the file name. -->
	<property name="release.suffix" value="1.0.0"/>
	<property name="release.file" value="${release.name}-v${release.suffix}.jar"/>
	<property name="release.path" value="${target.dir}/${release.file}"/>

	<!-- build libraries -->
	<property name="build.lib.dir" value="build-libs"/>
	<property name="build.lib.ajtools.path" value="${build.lib.dir}/aspectjtools.jar"/>
	<property name="build.lib.ajrt.path" value="${build.lib.dir}/aspectjrt.jar"/>
	<property name="build.lib.apache.commons.path" value="${build.lib.dir}/commons-logging.jar"/>
	<property name="build.lib.emf.ecore" value="${build.lib.dir}/org.eclipse.emf.ecore_2.8.1.v20120911-0500.jar"/>
	<property name="build.lib.emf.common" value="${build.lib.dir}/org.eclipse.emf.common_2.8.0.v20120911-0500.jar" />

	<!-- Task definition for aspectj ant tasks -->
	<taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
		<classpath>
			<pathelement location="${build.lib.ajtools.path}" />
			<pathelement location="${build.lib.ajrt.path}" />
		</classpath>
	</taskdef>

	<target name="clean">
		<echo>Cleaning up before new build</echo>
		<delete dir="${target.dir}" />
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${target.dir}" />
	</target>

	<target name="build" depends="init">
		<echo>Building ${release.file}</echo>
		<iajc outjar="${release.path}" source="1.5" target="1.5">
			<sourceroots>
				<pathelement location="${fumldebug.core.src.dir}" />
				<pathelement location="${fumldebug.core.aspect.src.dir}" />
			</sourceroots>
			<inpath>
				<pathelement location="${fuml.jar.path}" />
			</inpath>
			<classpath>
				<pathelement location="${build.lib.ajrt.path}" />
				<pathelement location="${build.lib.apache.commons.path}" />
				<pathelement location="${build.lib.emf.ecore}" />
				<pathelement location="${build.lib.emf.common}" />
			</classpath>
		</iajc>
	</target>

	<target name="distribute" depends="build">
		<echo>Copy ${release.file} to ${dist.dir}</echo>
		<copy file="${release.path}" todir="${dist.dir}"/>
	</target>

</project>